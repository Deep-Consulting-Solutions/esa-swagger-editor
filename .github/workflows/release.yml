name: Release SwaggerEditor@next
on: push

jobs:
  release:
    if: github.event.ref == 'refs/heads/master'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          submodules: true

      - name: Determine the next release version
        id: getVersion
        uses: cycjimmy/semantic-release-action@v3
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Nothing to release
        if: ${{ steps.getVersion.outputs.new_release_version == '' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Nothing to release')

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Prepare for the Release
        env:
          REACT_APP_VERSION: ${{ steps.getVersion.outputs.new_release_version }}
        run: |
          npm run lint
          npm run test
          npm run build:app
          npm run cy:ci
          npm run build:bundle:esm
          npm run build:bundle:umd

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          dry_run: false
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release failed
        if: steps.semantic.outputs.new_release_published == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Release failed')

      - name: Release published
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}
